

@{
    ViewBag.Title = "Add New Fennec User";
}


@using System.Web.Optimization;
@model WF.FENNEC.WebUI.Models.FennecUserModel

@using (Html.BeginForm("AddNewFennecUser", "Administration", FormMethod.Post, new { @class = "form-horizontal", role = "form", @ID = "frmAddNewFennecUser", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="col-lg-offset-0 col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-user-plus">&nbsp;</i>Add new user</h3>
            </div>
            <div class="panel-body">
                <div id="dvAddErrorHolder"></div>
                <div class="form-group">
                    <div class="col-xs-4">
                        @Html.Label("User Type", "User Type", new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                        @Html.DropDownListFor(input => input.UserTypeID, new SelectList(Model.UserTypes, "Value", "Text"), new { @class = "form-control input-sm", id = "ddlUserTypeID" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-4">
                        @Html.LabelFor(input => input.UserName, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                        @Html.TextBoxFor(input => input.UserName, new { @class = "form-control input-sm", id = "txtUserName", maxlength = "200" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-4" id="dvUserPassword">
                        @Html.Label("Password", "Password", new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                        @Html.PasswordFor(input => input.UserPassword, new { @class = "form-control input-sm", id = "txtUserPassword", maxlength = "100" })
                    </div>
                    <div class="col-xs-4" id="dvUserDomain">
                        @Html.Label("Domain Name", "Domain Name", new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                        @Html.TextBoxFor(input => input.DomainName, new { @class = "form-control input-sm", id = "txtDomainName", maxlength = "100" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-4">
                        @Html.LabelFor(input => input.DisplayName, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                        @Html.TextBoxFor(input => input.DisplayName, new { @class = "form-control input-sm", id = "txtDisplayName", maxlength = "250" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-3">
                        @Html.Label("Role(s)", "Role Associations", new { @class = "control-label" })
                        @for (int idx = 0; idx < Model.UserRoles.Count; idx++)
                        {
                            <div style="">
                                @Html.HiddenFor(x => Model.UserRoles[idx].ID)
                                @Html.CheckBoxFor(x => Model.UserRoles[idx].IsSelected)
                                @Html.DisplayFor(x => Model.UserRoles[idx].Text)
                            </div>
                        }
                    </div>
                    <div class="col-xs-3">
                        @Html.Label("System(s)", "System Associations", new { @class = "control-label" })
                        @for (int idx = 0; idx < Model.UserSystems.Count; idx++)
                        {
                            <div style="">
                                @Html.HiddenFor(x => Model.UserSystems[idx].ID)
                                @Html.CheckBoxFor(x => Model.UserSystems[idx].IsSelected)
                                @Html.DisplayFor(x => Model.UserSystems[idx].Text)

                            </div>
                        }
                    </div>
                </div>
                <div class="form-group">

                </div>
                <div style="clear:both"></div>
                <div class="form-group" style="margin-top:20px;">
                    <div class="col-xs-4">
                        <button type="button" onclick="return AddNewUser();" class="btn btn-primary btn-sm" id="btnAddNewUser">Add New User</button>&nbsp;
                        <button type="button" onclick="return AddNewUserReset();" class="btn btn-primary btn-sm" id="btnAddNewUserReset">Reset</button>&nbsp;
                        <button type="button" onclick="return AddNewUserCancel();" class="btn btn-primary btn-sm" id="btnAddNewUserCancel" style="float:none">Back</button>&nbsp;
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<script type="text/javascript">

    jQuery.validator.addMethod("usernameduplication", function (value, element, params) {

        var isUserNameValid = false;
        try {
            var response = getUrlJsonSync(getFennecAbsoluteUrl('~/Administration/CheckIfUserNameExists?userName=' + $('#txtUserName').val() + '&userTypeID=' +
                $('#ddlUserTypeID').val()));

            if (response.valid == 'OK') {
                if (response.data == 'False') {
                    isUserNameValid = true;
                }
            }
        }
        catch (e)
        { }

        return this.optional(element) || (!isUserNameValid);

    }, jQuery.validator.format("User name already exists"));


    var frmValidator = $("#frmAddNewFennecUser").validate({
        errorElement: 'span',
        ignore: ".ignore",
        rules: {
            UserName: {
                required: true,
            },
            UserPassword: {
                required: true,
            },
            DomainName: {
                required: true,
            },
            DisplayName: {
                required: true,
            },
        },

        // Messages for form validation
        messages: {
            UserName: {
                required: 'Please enter user name',
            },
            UserPassword: {
                required: 'Please enter user password',
            },
            DomainName: {
                required: 'Please enter domain name',
            },
            DisplayName: {
                required: 'Please enter display name',
            },
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        }

    });

    function VerifyUserIsNotDuplicateInFennec() {
        var isUserNameValid = false;

        try {
            var response = getUrlJsonSync(getFennecAbsoluteUrl('~/Administration/CheckIfUserNameExists?userName=' + $('#txtUserName').val() + '&userTypeID=' +
                $('#ddlUserTypeID').val()));

            if (response.valid == 'OK') {
                if (response.data == 'False') {
                    isUserNameValid = true;
                }
            }
        }
        catch (e)
        { }

        if (!isUserNameValid) {
            setFormStatusMessage('frmAddNewFennecUser', 'dvAddErrorHolder', false, 'User name already registered', 4);
        }

        return isUserNameValid;
    }

    function VerifyTheADUserNameIsValid() {
        //validate AD

        var isUserNameValid = false;

        if ($('#ddlUserTypeID').val() == "1") {

            try {
                var response = getUrlJsonSync(getFennecAbsoluteUrl('~/Administration/CheckIfUserNameIsValidADAccount?userName=' + $('#txtUserName').val() + '&domainname=' +
                    $('#txtDomainName').val()));

                if (response.valid == 'OK') {
                    if (response.data == 'True') {
                        isUserNameValid = true;
                    }
                }
            }
            catch (e)
            { }

            if (!isUserNameValid) {
                setFormStatusMessage('frmAddNewFennecUser', 'dvAddErrorHolder', false, 'Not a valid active directory user', 4);
            }
        }
        else
            isUserNameValid = true;

        return isUserNameValid;
    }

    function AddNewUser() {

        HideFormStatusMessage('frmAddNewFennecUser', 'dvAddErrorHolder');

        var isSuccess = false;
        if (!ajaxValidateAddNewUser()) {

            //$("#UserName").rules("remove","usernamecheck");
            return false;
        }
        else {

            if (VerifyUserIsNotDuplicateInFennec()) {

                if (VerifyTheADUserNameIsValid()) {
                    $.ajax({
                        url: getFennecAbsoluteUrl('~/Administration/AddNewUser'),
                        type: 'POST',
                        datatype: "html",
                        cache: false,
                        data: $("#frmAddNewFennecUser").serialize(),
                        success: function (data) {

                            if (data != null) {

                                var status = data.status;
                                var message = data.message;

                                wasItAAsuccess = (status == "OK");

                                if (wasItAAsuccess) {

                                    setFormStatusMessage('frmAddNewFennecUser', 'dvAddErrorHolder', true, 'New user successfully created', 4);
                                }
                                else {
                                    setFormStatusMessage('frmAddOrganization', 'dvAddErrorHolder', false, message);
                                }
                            }
                        },
                        error: function () {
                            setFormStatusMessage('frmAddNewFennecUser', 'dvAddErrorHolder', false, 'An error occured');

                        }
                    });
                }
            }
        }

        return false;
    }

    // Edit user validation rules
    function ajaxValidateAddNewUser() {
        return frmValidator.form();
    }

    function AddNewUserReset() {

        Clear_Form('frmAddNewFennecUser');
        frmValidator.resetForm();

        HideFormStatusMessage('frmAddNewFennecUser', 'dvAddErrorHolder');

        return false;
    }

    function AddNewUserCancel() {
        $("#dvActionArea").slideUp("slow", function () {
            // Animation complete.
            FennecShowAjaxLoadingContent('dvgridArea');
            $('#dvMainArea').slideDown("slow");
            $('#dvActionArea').html('');
            $('#dvgridArea').load(getFennecAbsoluteUrl('~/Administration/ManageUsersList'));
        });

        return false;
    }

    $(document).ready(function () {

        $('#ddlUserTypeID').change(function () {
            if ($(this).val() == "1") {
                $('#dvUserPassword').hide();
                $('#txtUserPassword').addClass('ignore');
                $('#dvUserDomain').show();
                $('#txtDomainName').removeClass('ignore');
            }
            else if ($(this).val() == "2") {
                $('#dvUserDomain').hide();
                $('#txtUserPassword').removeClass('ignore');
                $('#dvUserPassword').show();
                $('#txtDomainName').addClass('ignore');
            }
        });

        $('#ddlUserTypeID').change();

    });

</script>
