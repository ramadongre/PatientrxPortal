

@{
    ViewBag.Title = "Edit Rx";
}


@using System.Web.Optimization;
@model WebUI.PatientRxPortal.Models.RxViewModel

@using (Html.BeginForm("EditRx", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", @ID = "frmEditRx", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="col-lg-offset-0 col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-user-plus">&nbsp;</i><span id="spnEditNewRx"></span></h3>
            </div>
            <div class="panel-body">
                <div id="dvEditRxErrorHolder" style="padding-left:15px;padding-right:20px;"></div>
                <div class="form-group">
                    <div class="col-xs-4">
                        @Html.HiddenFor(input => input.RxDataID)
                        @Html.LabelFor(input => input.rxDate, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                        @Html.TextBoxFor(input => input.rxDate, "{0:d}", new { @class = "form-control input-sm", id = "txtERxDate", maxlength = "25" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-4">
                        @Html.LabelFor(input => input.rxDoctor, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                        @Html.TextBoxFor(input => input.rxDoctor, new { @class = "form-control input-sm", id = "rxDoctor", maxlength = "100" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-6">
                        @Html.LabelFor(input => input.Prescription1, new { @class = "control-label" })<span style="color:red;font-weight:bold">&nbsp;*</span>
                        @Html.TextBoxFor(input => input.Prescription1, new { @class = "form-control input-sm", id = "Prescription1", maxlength = "750" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-6">
                        @Html.LabelFor(input => input.Prescription2, new { @class = "control-label" })
                        @Html.TextBoxFor(input => input.Prescription2, new { @class = "form-control input-sm", id = "Prescription2", maxlength = "750" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-6">
                        @Html.LabelFor(input => input.Prescription3, new { @class = "control-label" })
                        @Html.TextBoxFor(input => input.Prescription3, new { @class = "form-control input-sm", id = "Prescription3", maxlength = "750" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-6">
                        @Html.LabelFor(input => input.Prescription4, new { @class = "control-label" })
                        @Html.TextBoxFor(input => input.Prescription4, new { @class = "form-control input-sm", id = "Prescription4", maxlength = "750" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-6">
                        @Html.LabelFor(input => input.Prescription5, new { @class = "control-label" })
                        @Html.TextBoxFor(input => input.Prescription5, new { @class = "form-control input-sm", id = "Prescription5", maxlength = "750" })
                    </div>
                </div>
                <div style="clear:both"></div>
                <div class="form-group" style="margin-top:20px;">
                    <div class="col-xs-4">
                        <button type="button" onclick="return UpdateRx();" class="btn btn-primary btn-sm" id="btnUpdateRx">Update Rx</button>&nbsp;
                        <button type="button" onclick="return EditRxReset();" class="btn btn-primary btn-sm" id="btnEditRxReset">Reset</button>&nbsp;
                        <button type="button" onclick="return EditRxCancel();" class="btn btn-primary btn-sm" id="btnEditRxCancel" style="float:none">Back</button>&nbsp;
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<script type="text/javascript">

    var frmValidator = $("#frmEditRx").validate({
        errorElement: 'span',
        ignore: ".ignore",
        rules: {
            rxDate: {
                required: true,
            },
            rxDoctor: {
                required: true,
            },
            Prescription1: {
                required: true,
            },
        },

        // Messages for form validation
        messages: {
            rxDate: {
                required: 'Please enter Rx Date',
            },
            rxDoctor: {
                required: 'Please enter Rx doctor',
            },
            Prescription1: {
                required: 'Please enter prescription one',
            },
        },
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        }

    });

    function UpdateRx() {

        HideFormStatusMessage('frmEditRx', 'dvEditRxErrorHolder');

        var isSuccess = false;
        if (!ajaxValidateEditRx()) {

            return false;
        }
        else {

            $.ajax({
                url: getMyAbsoluteUrl('~/home/EditRx?PatientID=' + currentUserID),
                type: 'POST',
                datatype: "html",
                cache: false,
                data: $("#frmEditRx").serialize(),
                success: function (data) {

                    if (data != null) {

                        var status = data.status;
                        var message = data.message;

                        wasItAAsuccess = (status == "OK");

                        if (wasItAAsuccess) {

                            setFormStatusMessage('frmEditRx', 'dvEditRxErrorHolder', true, 'Rx successfully updated.');
                        }
                        else {
                            setFormStatusMessage('frmEditRx', 'dvEditRxErrorHolder', false, message);
                        }
                    }
                },
                error: function () {
                    setFormStatusMessage('frmEditRx', 'dvEditRxErrorHolder', false, 'An error occured');

                }
            });

        }

        return false;
    }

    // Edit user validation rules
    function ajaxValidateEditRx() {
        return frmValidator.form();
    }

    function EditRxReset() {

        Clear_Form('frmEditRx');
        frmValidator.resetForm();

        HideFormStatusMessage('frmEditRx', 'dvEditRxErrorHolder');

        return false;
    }

    $(document).ready(function () {

        $("#txtERxDate").datepicker({
            maxDate: new Date, minDate: new Date(1950, 1, 1)
        });

        $('#spnEditNewRx').text('Add New Rx For ' + currentUserFirstName + " " + currentUserLastName);
    });

</script>
